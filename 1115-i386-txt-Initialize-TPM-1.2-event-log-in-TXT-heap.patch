From d9ba5e9769fb55b246bf76b3d812b85497610325 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20=C5=BBygowski?= <michal.zygowski@3mdeb.com>
Date: Wed, 31 Aug 2022 14:37:49 +0200
Subject: [PATCH 1115/1118] i386/txt: Initialize TPM 1.2 event log in TXT heap
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michał Żygowski <michal.zygowski@3mdeb.com>
Signed-off-by: Krystian Hebel <krystian.hebel@3mdeb.com>
---
 grub-core/loader/i386/txt/txt.c | 61 +++++++++++++++++++++++++++++++--
 include/grub/i386/txt.h         | 29 ++++++++++++++++
 2 files changed, 88 insertions(+), 2 deletions(-)

diff --git a/grub-core/loader/i386/txt/txt.c b/grub-core/loader/i386/txt/txt.c
index 201167ce9a44..f3afb6ad1d92 100644
--- a/grub-core/loader/i386/txt/txt.c
+++ b/grub-core/loader/i386/txt/txt.c
@@ -501,6 +501,24 @@ set_mtrrs_for_acmod (struct grub_txt_acm_header *hdr)
   return GRUB_ERR_NONE;
 }
 
+static void init_tpm12_event_log(struct grub_slaunch_params *slparams)
+{
+  struct event_log_container *elog;
+  elog = (struct event_log_container *)(grub_addr_t)slparams->tpm_evt_log_base;
+
+  if (slparams->tpm_evt_log_base == 0 || slparams->tpm_evt_log_size == 0)
+    return;
+
+  grub_memcpy((void *)elog->signature, EVTLOG_SIGNATURE, sizeof(elog->signature));
+  elog->container_ver_major = EVTLOG_CNTNR_MAJOR_VER;
+  elog->container_ver_minor = EVTLOG_CNTNR_MINOR_VER;
+  elog->pcr_event_ver_major = EVTLOG_EVT_MAJOR_VER;
+  elog->pcr_event_ver_minor = EVTLOG_EVT_MINOR_VER;
+  elog->size = slparams->tpm_evt_log_size;
+  elog->pcr_events_offset = sizeof(*elog);
+  elog->next_event_offset = sizeof(*elog);
+}
+
 static grub_err_t
 init_txt_heap (struct grub_slaunch_params *slparams, struct grub_txt_acm_header *sinit)
 {
@@ -510,6 +528,7 @@ init_txt_heap (struct grub_slaunch_params *slparams, struct grub_txt_acm_header
   struct grub_txt_os_mle_data *os_mle_data;
   struct grub_txt_os_sinit_data *os_sinit_data;
   struct grub_txt_heap_end_element *heap_end_element;
+  struct grub_txt_heap_tpm_event_log_element *heap_tpm_event_log_element;
   struct grub_txt_heap_event_log_pointer2_1_element *heap_event_log_pointer2_1_element;
 #ifdef GRUB_MACHINE_EFI
   struct grub_acpi_rsdp_v20 *rsdp;
@@ -598,10 +617,31 @@ init_txt_heap (struct grub_slaunch_params *slparams, struct grub_txt_acm_header
 
   sinit_caps = grub_txt_get_sinit_capabilities (sinit);
 
-  /* CBnT bits 5:4 must be 11b, since D/A mapping is the only one supported. */
+  grub_dprintf ("slaunch", "SINIT capabilities %08x\n", sinit_caps);
+
   os_sinit_data->capabilities = GRUB_TXT_CAPS_TPM_12_NO_LEGACY_PCR_USAGE |
 				GRUB_TXT_CAPS_TPM_12_AUTH_PCR_USAGE;
 
+  if (grub_get_tpm_ver () == GRUB_TPM_20)
+    {
+      /* CBnT bits 5:4 must be 11b, since D/A mapping is the only one supported. */
+      if ((sinit_caps & os_sinit_data->capabilities) != os_sinit_data->capabilities)
+        return grub_error (GRUB_ERR_BAD_ARGUMENT,
+               N_("Details/authorities PCR usage is not supported"));
+    }
+  else
+    {
+      if (!(sinit_caps & GRUB_TXT_CAPS_TPM_12_AUTH_PCR_USAGE))
+	{
+	  grub_dprintf ("slaunch", "Details/authorities PCR usage is not supported. Trying legacy");
+	  if (sinit_caps & GRUB_TXT_CAPS_TPM_12_NO_LEGACY_PCR_USAGE)
+	    return grub_error (GRUB_ERR_BAD_ARGUMENT,
+		N_("Not a single PCR usage available in SINIT capabilities"));
+
+	  os_sinit_data->capabilities = 0;
+	}
+    }
+
   /* Choose monitor RLP wakeup mechanism first. */
   if (sinit_caps & GRUB_TXT_CAPS_MONITOR_SUPPORT)
     os_sinit_data->capabilities |= GRUB_TXT_CAPS_MONITOR_SUPPORT;
@@ -614,9 +654,26 @@ init_txt_heap (struct grub_slaunch_params *slparams, struct grub_txt_acm_header
     os_sinit_data->capabilities |= GRUB_TXT_CAPS_ECX_PT_SUPPORT;
 
   if (grub_get_tpm_ver () == GRUB_TPM_12)
-    return grub_error (GRUB_ERR_BAD_DEVICE, N_("TPM 1.2 is not supported"));
+    {
+      os_sinit_data->flags = GRUB_TXT_PCR_EXT_MAX_PERF_POLICY;
+      os_sinit_data->version = OS_SINIT_DATA_TPM_12_VER;
+
+      heap_tpm_event_log_element = (struct grub_txt_heap_tpm_event_log_element *)
+                                   os_sinit_data->ext_data_elts;
+      heap_tpm_event_log_element->type = GRUB_TXT_HEAP_EXTDATA_TYPE_TPM_EVENT_LOG_PTR;
+      heap_tpm_event_log_element->size = sizeof (*heap_tpm_event_log_element);
+      heap_tpm_event_log_element->event_log_phys_addr = slparams->tpm_evt_log_base;
+      init_tpm12_event_log (slparams);
+
+      heap_end_element = (struct grub_txt_heap_end_element *)
+  ((grub_addr_t) heap_tpm_event_log_element + heap_tpm_event_log_element->size);
+      heap_end_element->type = GRUB_TXT_HEAP_EXTDATA_TYPE_END;
+      heap_end_element->size = sizeof (*heap_end_element);
+    }
   else
     {
+      grub_dprintf ("slaunch", "TPM 2.0 detected\n");
+      grub_dprintf ("slaunch", "Setting up TXT HEAP TPM event log element\n");
       if (!(sinit_caps & GRUB_TXT_CAPS_TPM_20_EVTLOG_SUPPORT))
 	return grub_error (GRUB_ERR_BAD_ARGUMENT,
 			   N_("original TXT TPM 2.0 event log format is not supported"));
diff --git a/include/grub/i386/txt.h b/include/grub/i386/txt.h
index 7d57af68841f..a8ac569968c7 100644
--- a/include/grub/i386/txt.h
+++ b/include/grub/i386/txt.h
@@ -22,6 +22,7 @@
 #define GRUB_TXT_H 1
 
 #include <grub/err.h>
+#include <grub/tpm.h>
 #include <grub/types.h>
 #include <grub/i386/memory.h>
 #include <grub/i386/mmio.h>
@@ -465,6 +466,34 @@ struct grub_txt_heap_event_log_ptr_elt2_1
   grub_uint32_t next_record_offset;
 } GRUB_PACKED;
 
+struct tpm12_pcr_event {
+    grub_uint32_t pcr_index;
+    grub_uint32_t type;
+    grub_uint8_t digest[SHA1_DIGEST_SIZE];
+    grub_uint32_t data_size;
+    grub_uint8_t data[];
+} GRUB_PACKED;
+
+#define EVTLOG_SIGNATURE "TXT Event Container\0"
+#define EVTLOG_CNTNR_MAJOR_VER 1
+#define EVTLOG_CNTNR_MINOR_VER 0
+#define EVTLOG_EVT_MAJOR_VER 1
+#define EVTLOG_EVT_MINOR_VER 0
+
+struct event_log_container {
+    grub_uint8_t signature[20];
+    grub_uint8_t reserved[12];
+    grub_uint8_t container_ver_major;
+    grub_uint8_t container_ver_minor;
+    grub_uint8_t pcr_event_ver_major;
+    grub_uint8_t pcr_event_ver_minor;
+    grub_uint32_t size;
+    grub_uint32_t pcr_events_offset;
+    grub_uint32_t next_event_offset;
+    struct tpm12_pcr_event pcr_events[];
+} GRUB_PACKED;
+
+
 /* TXT register and heap access */
 
 static inline grub_uint64_t
-- 
2.17.1

